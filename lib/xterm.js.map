{"version":3,"file":"xterm.js","mappings":"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,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAA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","sources":["webpack://xterm/webpack/universalModuleDefinition","webpack://xterm/./src/browser/AccessibilityManager.ts","webpack://xterm/./src/browser/Clipboard.ts","webpack://xterm/./src/browser/ColorContrastCache.ts","webpack://xterm/./src/browser/ColorManager.ts","webpack://xterm/./src/browser/Dom.ts","webpack://xterm/./src/browser/Lifecycle.ts","webpack://xterm/./src/browser/Linkifier2.ts","webpack://xterm/./src/browser/LocalizableStrings.ts","webpack://xterm/./src/browser/RenderDebouncer.ts","webpack://xterm/./src/browser/ScreenDprMonitor.ts","webpack://xterm/./src/browser/Terminal.ts","webpack://xterm/./src/browser/TimeBasedDebouncer.ts","webpack://xterm/./src/browser/Viewport.ts","webpack://xterm/./src/browser/decorations/BufferDecorationRenderer.ts","webpack://xterm/./src/browser/decorations/ColorZoneStore.ts","webpack://xterm/./src/browser/decorations/OverviewRulerRenderer.ts","webpack://xterm/./src/browser/input/CompositionHelper.ts","webpack://xterm/./src/browser/input/Mouse.ts","webpack://xterm/./src/browser/input/MoveToCell.ts","webpack://xterm/./src/browser/public/Terminal.ts","webpack://xterm/./src/browser/renderer/Constants.ts","webpack://xterm/./src/browser/renderer/RendererUtils.ts","webpack://xterm/./src/browser/renderer/dom/DomRenderer.ts","webpack://xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://xterm/./src/browser/selection/SelectionModel.ts","webpack://xterm/./src/browser/services/CharSizeService.ts","webpack://xterm/./src/browser/services/CharacterJoinerService.ts","webpack://xterm/./src/browser/services/CoreBrowserService.ts","webpack://xterm/./src/browser/services/MouseService.ts","webpack://xterm/./src/browser/services/RenderService.ts","webpack://xterm/./src/browser/services/SelectionService.ts","webpack://xterm/./src/browser/services/Services.ts","webpack://xterm/./src/common/CircularList.ts","webpack://xterm/./src/common/Clone.ts","webpack://xterm/./src/common/Color.ts","webpack://xterm/./src/common/CoreTerminal.ts","webpack://xterm/./src/common/EventEmitter.ts","webpack://xterm/./src/common/InputHandler.ts","webpack://xterm/./src/common/Lifecycle.ts","webpack://xterm/./src/common/Platform.ts","webpack://xterm/./src/common/SortedList.ts","webpack://xterm/./src/common/TypedArrayUtils.ts","webpack://xterm/./src/common/WindowsMode.ts","webpack://xterm/./src/common/buffer/AttributeData.ts","webpack://xterm/./src/common/buffer/Buffer.ts","webpack://xterm/./src/common/buffer/BufferLine.ts","webpack://xterm/./src/common/buffer/BufferRange.ts","webpack://xterm/./src/common/buffer/BufferReflow.ts","webpack://xterm/./src/common/buffer/BufferSet.ts","webpack://xterm/./src/common/buffer/CellData.ts","webpack://xterm/./src/common/buffer/Constants.ts","webpack://xterm/./src/common/buffer/Marker.ts","webpack://xterm/./src/common/data/Charsets.ts","webpack://xterm/./src/common/data/EscapeSequences.ts","webpack://xterm/./src/common/input/Keyboard.ts","webpack://xterm/./src/common/input/TextDecoder.ts","webpack://xterm/./src/common/input/UnicodeV6.ts","webpack://xterm/./src/common/input/WriteBuffer.ts","webpack://xterm/./src/common/input/XParseColor.ts","webpack://xterm/./src/common/parser/Constants.ts","webpack://xterm/./src/common/parser/DcsParser.ts","webpack://xterm/./src/common/parser/EscapeSequenceParser.ts","webpack://xterm/./src/common/parser/OscParser.ts","webpack://xterm/./src/common/parser/Params.ts","webpack://xterm/./src/common/public/AddonManager.ts","webpack://xterm/./src/common/public/BufferApiView.ts","webpack://xterm/./src/common/public/BufferLineApiView.ts","webpack://xterm/./src/common/public/BufferNamespaceApi.ts","webpack://xterm/./src/common/public/ParserApi.ts","webpack://xterm/./src/common/public/UnicodeApi.ts","webpack://xterm/./src/common/services/BufferService.ts","webpack://xterm/./src/common/services/CharsetService.ts","webpack://xterm/./src/common/services/CoreMouseService.ts","webpack://xterm/./src/common/services/CoreService.ts","webpack://xterm/./src/common/services/DecorationService.ts","webpack://xterm/./src/common/services/DirtyRowService.ts","webpack://xterm/./src/common/services/InstantiationService.ts","webpack://xterm/./src/common/services/LogService.ts","webpack://xterm/./src/common/services/OptionsService.ts","webpack://xterm/./src/common/services/ServiceRegistry.ts","webpack://xterm/./src/common/services/Services.ts","webpack://xterm/./src/common/services/UnicodeService.ts","webpack://xterm/webpack/bootstrap","webpack://xterm/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'common/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { ColorIndex, IColor } from 'common/Types';\n\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n  }\n\n  public onOptionsChange(key: string, value: any): void {\n    switch (key) {\n      case 'minimumContrastRatio':\n        this._contrastCache.clear();\n        break;\n      case 'allowTransparency':\n        this.allowTransparency = value;\n        break;\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selectionBackgroundTransparent = this._parseColor(theme.selectionBackground, DEFAULT_SELECTION, true);\n    this.colors.selectionBackgroundOpaque = color.blend(this.colors.background, this.colors.selectionBackgroundTransparent);\n    this.colors.selectionInactiveBackgroundTransparent = this._parseColor(theme.selectionInactiveBackground, this.colors.selectionBackgroundTransparent, true);\n    this.colors.selectionInactiveBackgroundOpaque = color.blend(this.colors.background, this.colors.selectionInactiveBackgroundTransparent);\n    const nullColor: IColor = {\n      css: '',\n      rgba: 0\n    };\n    this.colors.selectionForeground = theme.selectionForeground ? this._parseColor(theme.selectionForeground, nullColor) : undefined;\n    if (this.colors.selectionForeground === nullColor) {\n      this.colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionBackgroundTransparent = color.opacity(this.colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(this.colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionInactiveBackgroundTransparent = color.opacity(this.colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    this.colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(this.colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        this.colors.ansi[i + 16] = this._parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this.colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this.colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this.colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this.colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this.colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this.colors.foreground,\n      background: this.colors.background,\n      cursor: this.colors.cursor,\n      ansi: this.colors.ansi.slice()\n    };\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._lastMouseEvent = undefined;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _parentWindow: Window;\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(parentWindow: Window) {\n    super();\n    this._parentWindow = parentWindow;\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, IViewport, ILinkifier2, CharacterJoinerHandler, IBufferRange } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ICoreBrowserService, ICharacterJoinerService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'common/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n  public get parentWindow(): Window & typeof globalThis {\n    return this._document?.defaultView ?? window;\n  }\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onBell = new EventEmitter<void>();\n  public get onBell(): IEvent<void> { return this._onBell.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._colorManager) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi' | undefined = undefined;\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      if (acc) {\n        switch (req.type) {\n          case ColorRequestType.REPORT:\n            const channels = color.toColorRGB(acc === 'ansi'\n              ? this._colorManager.colors.ansi[req.index]\n              : this._colorManager.colors[acc]);\n            this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n            break;\n          case ColorRequestType.SET:\n            if (acc === 'ansi') this._colorManager.colors.ansi[req.index] = rgba.toColor(...req.color);\n            else this._colorManager.colors[acc] = rgba.toColor(...req.color);\n            break;\n          case ColorRequestType.RESTORE:\n            this._colorManager.restoreColor(req.index);\n            break;\n        }\n      }\n    }\n    this._renderService?.setColors(this._colorManager.colors);\n    this.viewport?.onThemeChange(this._colorManager.colors);\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'customGlyphs':\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.rawOptions.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.rawOptions.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    console.log('focus');\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    console.log('blur');\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.actualCellHeight;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.actualCellWidth * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.actualCellHeight;\n    const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e, this.optionsService.rawOptions[e])));\n    this._colorManager.setTheme(this._theme);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement, this.parentWindow));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea,\n      this.element,\n      this.parentWindow\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.onCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.parentWindow,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement, this.parentWindow));\n    }\n    this.optionsService.onOptionChange(() => {\n      if (!this._overviewRulerRenderer && this.options.overviewRulerWidth && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement, this.parentWindow));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    const renderer = this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.parentWindow, this.linkifier2);\n    return renderer;\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getRawByteCoords(ev, self.screenElement!, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.rawOptions.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.scaledCanvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.scaledCanvasHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.scaledCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.scaledCellHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentScaledCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    private readonly _element: HTMLElement,\n    private readonly _parentWindow: Window & typeof globalThis,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / this._parentWindow.devicePixelRatio;\n      this._currentScaledCellHeight = this._renderService.dimensions.scaledCellHeight;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.scaledCellHeight !== this._currentScaledCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._parentWindow.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n  }\n\n  public override dispose(): void {\n    this._container.remove();\n    this._decorationElements.clear();\n    super.dispose();\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this.refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  public refreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.actualCellWidth)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.actualCellHeight}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.actualCellHeight}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.actualCellHeight}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        decoration.onDispose(() => this._removeDecoration(decoration));\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n      }\n      element.style.top = `${line * this._renderService.dimensions.actualCellHeight}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.actualCellWidth}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.actualCellWidth}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _parentWindow: Window & typeof globalThis,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onOptionChange(o => {\n      if (o === 'overviewRulerWidth') {\n        this._queueRefresh(true);\n      }\n    }));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._parentWindow, 'resize', () => {\n      this._queueRefresh(true);\n    }));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  public override dispose(): void {\n    this._canvas?.remove();\n    super.dispose();\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._parentWindow.devicePixelRatio);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._parentWindow.devicePixelRatio);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._parentWindow.devicePixelRatio);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._parentWindow.devicePixelRatio);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    // TODO: Is _decorationElements needed?\n\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._dataAlreadySent = diff;\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.actualCellHeight;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.actualCellHeight;\n      const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILocalizableStrings, ITerminalAddon, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, FontWeight, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: ITerminalOptions;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): ITerminalOptions {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <=  0xE0D6;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return (0x2500 <= codepoint && codepoint <= 0x259F);\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService, IInstantiationService, IDecorationService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'common/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _parentWindow: Window & typeof globalThis,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e)));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * this._parentWindow.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * this._parentWindow.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / this._parentWindow.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / this._parentWindow.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    this._rowFactory.onSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerText = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerText = '';\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { IColorSet } from 'browser/Types';\nimport { ICharacterJoinerService, ICoreBrowserService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  constructor(\n    private readonly _document: Document,\n    private _colors: IColorSet,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(`${UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (charElement.textContent === ' ') {\n          charElement.innerHTML = '&nbsp;';\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = this._colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      for (const d of this._decorationService.getDecorationsAtCell(x, row)) {\n        if (d.options.layer !== 'top' && isTop) {\n          continue;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      }\n\n      // Apply selection foreground if applicable\n      const isInSelection = this._isCellInSelection(x, row);\n      if (!isTop) {\n        if (this._colors.selectionForeground && isInSelection) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = this._colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = this._colors.selectionForeground;\n        }\n      }\n\n      // If in the selection, force the element to be above the selection to improve contrast and\n      // support opaque selections\n      if (isInSelection) {\n        bgOverride = this._coreBrowserService.isFocused ? this._colors.selectionBackgroundOpaque : this._colors.selectionInactiveBackgroundOpaque;\n        isTop = true;\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        charElement.classList.add(`xterm-decoration-top`);\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = this._colors.ansi[bg];\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = this._colors.foreground;\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = this._colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, this._colors.ansi[fg], cell, bgOverride, undefined)) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, this._colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      fragment.appendChild(charElement);\n\n      x = lastCharX;\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = this._colors.contrastCache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._colors.contrastCache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    const docOrShadowRoot = this._textarea.getRootNode ? this._textarea.getRootNode() as Document | ShadowRoot : document;\n    return docOrShadowRoot.activeElement === this._textarea && this._textarea.ownerDocument.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRenderedViewportChange = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedViewportChange(): IEvent<{ start: number, end: number }> { return this._onRenderedViewportChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    parentWindow: Window & typeof globalThis,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer(parentWindow, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(parentWindow);\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(parentWindow, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in parentWindow) {\n      const observer = new parentWindow.IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService } from 'browser/services/Services';\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _parentWindow: Window & typeof globalThis,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._onMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._parentWindow.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._parentWindow, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._parentWindow.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._parentWindow.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/Types';\nimport { IColorSet, IRenderDebouncer } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\nimport { IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferService } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorRGB } from 'common/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    const a = color.rgba & 0xFF;\n    return opacity(color, (a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    if (css.match(/#[0-9a-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          const r = parseInt(css.slice(1, 2).repeat(2), 16);\n          const g = parseInt(css.slice(2, 3).repeat(2), 16);\n          const b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor(r, g, b);\n        }\n        case 5: { // #rgba\n          const r = parseInt(css.slice(1, 2).repeat(2), 16);\n          const g = parseInt(css.slice(2, 3).repeat(2), 16);\n          const b = parseInt(css.slice(3, 4).repeat(2), 16);\n          const a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor(r, g, b, a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) { // rgb() or rgba()\n      const r = parseInt(rgbaMatch[1]);\n      const g = parseInt(rgbaMatch[2]);\n      const b = parseInt(rgbaMatch[3]);\n      const a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor(r, g, b, a);\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService, LogLevelEnum, ITerminalOptions } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IBufferLine, IAttributeData, ICoreTerminal, IKeyboardEvent, IScrollEvent, ScrollSource, ITerminalOptions as IPublicTerminalOptions } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<IScrollEvent, void>();\n  public get onWriteParsed(): IEvent<void> { return this._onWriteParsed.event; }\n  protected _onWriteParsed = new EventEmitter<void>();\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = new EventEmitter<number, void>();\n      this.register(this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      }));\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this.coreService, this._dirtyRowService, this._logService, this.optionsService, this.coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.rawOptions.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  public hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  public unhook(success: boolean): boolean {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return true;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n        break;\n      case '\"p': // DECSCL\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n        break;\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n          ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n        break;\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n        break;\n      case ' q': // DECSCUSR\n        const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n        let style = STYLES[this._optionsService.rawOptions.cursorStyle];\n        style -= this._optionsService.rawOptions.cursorBlink ? 1 : 0;\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n        break;\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n    return true;\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestSendFocus = new EventEmitter<void>();\n  public get onRequestSendFocus(): IEvent<void> { return this._onRequestSendFocus.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onColor = new EventEmitter<IColorEvent>();\n  public get onColor(): IEvent<IColorEvent> { return this._onColor.event; }\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowService.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   * @param cleanWrap clear the isWrapped flag\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()));\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #P[Currently outputs a single underline.] |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #P[Currently outputs a single underline.] |\n   * | 3      | Curly underline.                                              | #P[Currently outputs a single underline.] |\n   * | 4      | Dotted underline.                                             | #P[Currently outputs a single underline.] |\n   * | 5      | Dashed underline.                                             | #P[Currently outputs a single underline.] |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    const i = this._search(this._getKey(value), 0, this._array.length - 1);\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    let i = this._search(key, 0, this._array.length - 1);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    let i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    return this._array.values();\n  }\n\n  private _search(key: number, min: number, max: number): number {\n    if (max < min) {\n      return min;\n    }\n    let mid = Math.floor((min + max) / 2);\n    const midKey = this._getKey(this._array[mid]);\n    if (midKey > key) {\n      return this._search(key, min, mid - 1);\n    }\n    if (midKey < key) {\n      return this._search(key, mid + 1, max);\n    }\n    // Value found! Since keys can be duplicates, move the result index back to the lowest index\n    // that matches the key.\n    while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n      mid--;\n    }\n    return mid;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number { return this._ext; }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  constructor(\n    underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    underlineColor: number = Attributes.CM_DEFAULT\n  ) {\n    this.underlineStyle = underlineStyle;\n    this.underlineColor = underlineColor;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor(\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\n// queueMicrotask polyfill for nodejs < v11\nconst qmt: (cb: () => void) => void = (typeof queueMicrotask === 'undefined')\n  ? (cb: () => void) => { Promise.resolve().then(cb); }\n  : queueMicrotask;\n\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  public get onWriteParsed(): IEvent<void> { return this._onWriteParsed.event; }\n  private _onWriteParsed = new EventEmitter<void>();\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) { }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          qmt(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    super();\n    this.cols = Math.max(_optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecorationOptions, IDecoration, IMarker, IEvent } from 'xterm';\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public get onDecorationRegistered(): IEvent<IInternalDecoration> { return this._onDecorationRegistered.event; }\n  private _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public get onDecorationRemoved(): IEvent<IInternalDecoration> { return this._onDecorationRemoved.event; }\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtLine(line: number): IterableIterator<IInternalDecoration> {\n    return this._decorations.getKeyIterator(line);\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public dispose(): void {\n    for (const d of this._decorations.values()) {\n      this._onDecorationRemoved.fire(d);\n    }\n    this.reset();\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public isDisposed: boolean = false;\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle } from 'common/Types';\n\nexport const DEFAULT_OPTIONS: Readonly<ITerminalOptions> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: undefined\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: ITerminalOptions;\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: Partial<ITerminalOptions>) {\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'cursorStyle':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColorRGB, IColor, CursorStyle } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Readonly<ITerminalOptions>;\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi: boolean;\n  allowTransparency: boolean;\n  altClickMovesCursor: boolean;\n  cols: number;\n  convertEol: boolean;\n  cursorBlink: boolean;\n  cursorStyle: CursorStyle;\n  cursorWidth: number;\n  customGlyphs: boolean;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  smoothScrollDuration: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /** Iterates over the decorations at a line (in no particular order). */\n  getDecorationsAtLine(line: number): IterableIterator<IInternalDecoration>;\n  /** Iterates over the decorations at a cell (in no particular order). */\n  getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration>;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(4389);\n"],"names":["root","factory","exports","module","define","amd","a","i","self","_terminal","_renderService","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","document","createElement","classList","add","tabIndex","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_onBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","bind","_refreshRows","_liveRegion","element","Error","insertAdjacentElement","register","onResize","_onResize","onRender","start","end","onScroll","onA11yChar","char","_onChar","onLineFeed","onA11yTab","spaceCount","_onTab","onKey","_onKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","window","setListener","addDisposableDomListener","dispose","removeElementFromParent","this","position","boundaryElement","target","beforeBoundaryElement","getAttribute","buffer","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","shift","removeEventListener","newElement","unshift","push","scrollLines","focus","preventDefault","stopImmediatePropagation","children","_refreshRowDimensions","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","setTimeout","keyChar","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","dimensions","actualCellHeight","style","height","Disposable","AccessibilityManager","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","width","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","select","_color","_rgba","clear","setCss","bg","fg","getCss","undefined","setColor","getColor","ColorContrastCache","DEFAULT_FOREGROUND","css","toColor","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","rgba","DEFAULT_ANSI_COLORS","Object","freeze","colors","v","r","g","b","channels","toCss","toRgba","c","allowTransparency","canvas","ctx","getContext","_ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","foreground","background","cursor","cursorAccent","selectionForeground","selectionBackgroundTransparent","selectionBackgroundOpaque","color","blend","selectionInactiveBackgroundTransparent","selectionInactiveBackgroundOpaque","ansi","slice","contrastCache","_updateRestoreColors","onOptionsChange","setTheme","theme","_parseColor","selectionBackground","selectionInactiveBackground","nullColor","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","Math","min","restoreColor","slot","_restoreColors","fallback","fillStyle","console","warn","fillRect","data","getImageData","substring","split","map","component","Number","alpha","round","ColorManager","elements","parentElement","node","type","handler","options","disposed","_bufferService","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","_onShowLinkUnderline","EventEmitter","_onHideLinkUnderline","getDisposeArrayDisposable","_currentLink","event","_lastMouseEvent","registerLinkProvider","linkProvider","providerIndex","indexOf","splice","attachToDom","mouseService","renderService","_element","_mouseService","_clearCurrentLink","_onMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","x","y","_onHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","get","_checkLinkProviderResult","provideLinks","links","linksWithState","set","size","_removeIntersectingLinks","entries","replies","occupiedCells","Set","providerReply","startX","range","endX","cols","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","currentLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","toggle","_fireUnderlineEvent","onRenderedViewportChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","fire","remove","leave","sameLine","wrappedFromLeft","wrappedToRight","coords","getCoords","x1","y1","x2","y2","IBufferService","Linkifier2","promptLabel","_parentWindow","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","callback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","_rowEnd","max","_runRefreshCallbacks","RenderDebouncer","parentWindow","_currentDevicePixelRatio","devicePixelRatio","listener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","_onRender","_onSelectionChange","_onTitleChange","_onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_setup","linkifier2","_instantiationService","createInstance","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","onCursorMove","onTitleChange","_afterResize","_document","defaultView","_colorManager","req","acc","ident","toColorRGB","C0","ESC","toRgbString","C1_ESCAPED","ST","setColors","viewport","onThemeChange","_isDisposed","_customKeyEventHandler","write","buffers","active","preventScroll","_updateOptions","_charSizeService","measure","syncScrollArea","optionsService","rawOptions","screenReaderMode","_accessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","log","sendFocus","updateCursorStyle","_showCursor","blur","_onTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","actualCellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","open","parent","isConnected","_logService","debug","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","_coreBrowserService","CoreBrowserService","ICoreBrowserService","CharSizeService","ICharSizeService","_theme","onOptionChange","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","renderer","_createRenderer","RenderService","IRenderService","resize","_compositionView","CompositionHelper","MouseService","IMouseService","Viewport","amount","onRequestSyncScrollBar","onFocus","SelectionService","ISelectionService","onRequestScrollLines","suppressScrollEvent","onSelectionChange","onRequestRedraw","onSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","onMouseDown","coreMouseService","areMouseEventsActive","disable","enable","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","bindMouse","DomRenderer","el","sendEvent","but","action","getRawByteCoords","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","col","row","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","source","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","registerDecoration","decorationOptions","column","setSelection","getSelection","getSelectionPosition","selectionStart","selectionEnd","clearSelection","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollToBottom","result","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","scaledCanvasWidth","toFixed","canvasHeight","scaledCanvasHeight","GET_CELL_SIZE_PIXELS","scaledCellWidth","scaledCellHeight","force","cancelEvents","CoreTerminal","Terminal","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","_optionsService","scrollBarWidth","_currentRowHeight","_currentScaledCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","offsetWidth","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","backgroundColor","_refresh","immediate","offsetHeight","newBufferHeight","scrollTop","offsetParent","diff","_smoothScroll","percent","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","IOptionsService","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","refreshDecorations","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","marker","line","display","onRenderEmitter","onDispose","anchor","right","delete","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","zone","ColorZoneStore","drawHeight","drawWidth","drawX","_colorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","insertBefore","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","o","_refreshDrawConstants","outerWidth","innerWidth","ceil","pixelsPerLine","nonFullHeight","_width","_refreshDecorations","clearRect","lineWidth","zones","_renderColorZone","updateCanvasDimensions","updateAnchor","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","input","oldValue","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","parseInt","getPropertyValue","topPadding","colCount","hasValidCharSize","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","isWrapped","wrappedRowsCount","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","CONSTRUCTOR_ONLY_OPTIONS","_core","_addonManager","AddonManager","_publicOptions","getter","propName","setter","_checkReadonlyOptions","desc","defineProperty","includes","_checkProposedApi","allowProposedApi","onBell","onBinary","onData","onWriteParsed","_parser","ParserApi","UnicodeApi","_buffer","BufferNamespaceApi","m","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","applicationKeypad","insertMode","modes","originMode","reverseWraparoundMode","reverseWraparound","sendFocusMode","wraparoundMode","wraparound","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","scrollPages","pageCount","scrollToTop","scrollToLine","writeln","loadAddon","addon","values","Infinity","isNaN","INVERTED_DEFAULT_COLOR","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","isPowerlineGlyph","codepoint","isBoxOrBlockGlyph","TERMINAL_CLASS_PREFIX","ROW_CONTAINER_CLASS","FG_CLASS_PREFIX","BG_CLASS_PREFIX","FOCUS_CLASS","SELECTION_CLASS","nextTerminalId","_colors","_linkifier2","instantiationService","_terminalClass","_refreshRowElements","_selectionContainer","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","_updateDimensions","_injectCss","_rowFactory","DomRendererRowFactory","onShowLinkUnderline","_onLinkHover","onHideLinkUnderline","_onLinkLeave","_themeStyleElement","_dimensionsStyleElement","letterSpacing","overflow","styles","_terminalSelector","BOLD_CLASS","fontWeight","fontWeightBold","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","cursorWidth","CURSOR_STYLE_UNDERLINE_CLASS","opaque","onDevicePixelRatioChange","onCharSizeChanged","renderRows","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","documentFragment","isXFlipped","_createSelectionElement","middleRowsCount","colStart","colEnd","onOptionsChanged","cursorAbsoluteY","cursorBlink","rowElement","cursorStyle","createRow","_setCellUnderline","enabled","span","textDecoration","IInstantiationService","DIM_CLASS","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","_workCell","CellData","_columnSelectMode","_selectionStart","_selectionEnd","isCursorRow","joinedRanges","getJoinedCharacters","lineLength","loadCell","getCode","NULL_CELL_CODE","isJoined","lastCharX","cell","JoinedCellData","translateToString","charElement","isCursorHidden","isBold","isItalic","isDim","isInvisible","WHITESPACE_CELL_CHAR","getChars","isUnderline","extended","underlineStyle","innerHTML","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","getFgColor","fgColorMode","getFgColorMode","getBgColor","bgColorMode","getBgColorMode","isInverse","temp","temp2","bgOverride","fgOverride","isTop","getDecorationsAtCell","d","layer","backgroundColorRGB","foregroundColorRGB","isInSelection","_isCellInSelection","isFocused","resolvedBg","_addStyle","padStart","multiplyOpacity","_applyMinimumContrast","minimumContrastRatio","excludeFromContrastRatioDemands","adjustedColor","ensureContrastRatio","padChar","isSelectAllActive","selectionStartLength","areSelectionValuesReversed","startPlusLength","onTrim","SelectionModel","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","firstCell","chars","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","id","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","getTrimmedLength","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","error","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","newRange","inRange","getRootNode","activeElement","hasFocus","_renderer","decorationService","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","_renderDebouncer","_fullRefresh","_handleOptionsChanged","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","entry","isIntersecting","intersectionRatio","isRedrawOnly","_fireOnCanvasResize","setRenderer","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","RegExp","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseMoveListener","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","_onTrim","_onBufferActivate","_model","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","startRowEndCol","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","offset","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","altClickMovesCursor","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","getCodePoint","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","first","last","createDecorator","_maxLength","onDeleteEmitter","onInsertEmitter","onTrimEmitter","_array","Array","_startIndex","_length","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","CircularList","clone","val","depth","clonedObject","isArray","rgb","toPaddedHex","s","contrastRatio","l1","l2","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","ratio","rgbaColor","factor","match","rgbaMatch","parseFloat","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","increaseLuminance","bgL","fgL","resultB","resultA","resultARatio","hasWriteSyncWarnHappened","_onBinary","_onData","_onLineFeed","_onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","_dirtyRowService","DirtyRowService","IDirtyRowService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","InputHandler","markRangeDirty","scrollBottom","_writeBuffer","WriteBuffer","promiseResult","parse","_onScrollApi","_windowsMode","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_data","Uint32Array","hook","params","put","concat","subarray","unhook","success","utf32ToString","pt","_coreMouseService","_unicodeService","EscapeSequenceParser","_parseBuffer","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","setCsiHandlerFallback","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","CHARSETS","screenAlignmentPattern","setErrorHandler","DECRQSS","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","wasPaused","DEBUG","prototype","clearRange","len","decode","chWidth","charset","curAttr","bufferRow","markDirty","setCellFromCodePoint","wcwidth","ch","stringFromCodePoint","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","hasContent","DcsHandler","convertEol","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","replaceCells","_resetBufferLine","fill","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","term","termName","setgCharset","DEFAULT_CHARSET","activeEncoding","activateAltBuffer","activateNormalBuffer","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","updateExtended","l","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","idx","spec","exec","parseColor","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","_disposables","unregister","disposables","f","array","isNode","navigator","userAgent","platform","isSafari","test","isIpad","isIphone","_getKey","insert","_search","getKeyIterator","mid","midKey","SortedList","fillFallback","constructor","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","hasExtendedAttrs","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","_ext","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_cols","_rows","_getCorrectBufferLength","getWhitespaceCell","BufferLine","maxLength","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","trimmedLines","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","stringIndexToBufferIndex","lineIndex","stringIndex","trimRight","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","tabStopWidth","Marker","onInsert","onDelete","_removeMarker","iterator","startOverscan","endOverscan","BufferStringIterator","Buffer","_trimRight","_endIndex","_startOverscan","_endOverscan","_current","hasNext","next","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","codePoint","eAttrs","keys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_normal","_alt","inactiveBuffer","BufferSet","obj","combined","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","_id","_nextId","isDisposed","_onDispose","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","DEL","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","startsWith","toLowerCase","_interim","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","table","BMP_COMBINING","HIGH_COMBINING","version","num","ucs","bisearch","UnicodeV6","qmt","queueMicrotask","cb","resolve","then","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","chunk","_innerWrite","lastTime","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","handlerResult","DcsParser","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","setDefault","addMany","codes","TransitionTable","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_start","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","k","newParams","getSubParamsAll","store","cur","_addons","instance","terminal","loadedAddon","_wrappedAddonDispose","init","getLine","BufferLineApiView","BufferApiView","_line","getCell","startColumn","endColumn","_onBufferChange","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","isFull","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","name","protocol","encoding","_compareEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_scrollToBottom","wasUserInput","disableStdin","_decorations","_onDecorationRegistered","_onDecorationRemoved","Decoration","getDecorationsAtLine","xmin","xmax","_cachedBg","_cachedFg","foregroundColor","_end","_entries","service","ServiceCollection","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","args","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","DEFAULT_OPTIONS","customGlyphs","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","newValue","_sanitizeAndValidateOption","_setupOptions","isCursorStyle","storeServiceDependency","serviceRegistry","decorator","arguments","_providers","_onChange","defaultProvider","_activeProvider","getStringCellWidth","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}